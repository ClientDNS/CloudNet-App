

default_platform(:android)

platform :android do
  version_code = nil
  version_name = nil


  before_all do
    version_name = sh "grep 'version:' ../../pubspec.yaml | awk '{ print $2 }' | tr -d '\n'"
    version_code = 203 + Integer(sh("git rev-list HEAD --first-parent --count"))
  end

  lane :alpha do
    flavor = "alpha"
    build(
      flavor: flavor,
    )
    apkPath = "../build/app/outputs/apk/#{flavor}/release/app-#{flavor}-release.apk"
    appcenter_upload(
      api_token: ENV['APPCENTER_API_TOKEN'],
      owner_name: ENV['APPCENTER_OWNER_NAME'],
      app_name: "CloudNet-Alpha-Android",
      file: apkPath,
      notify_testers: true,
      app_os: 'Android',
      owner_type: "user"
    )
  end

  lane :beta do
    build(
      flavor: "beta",
    )
    apkPath = "../build/app/outputs/apk/#{flavor}/release/app-#{flavor}-release.apk"
    appcenter_upload(
      api_token: ENV["APPCENTER_API_TOKEN"],
      owner_name: ENV["APPCENTER_OWNER_NAME"],
      app_name: "CloudNet-Beta-Android",
      file: apkPath
    )
  end

  lane :store do
    build(
      flavor: "store",
    )
    apkPath = "../build/app/outputs/apk/#{flavor}/release/app-#{flavor}-release.apk"
    appcenter_upload(
      api_token: ENV["APPCENTER_API_TOKEN"],
      owner_name: ENV["APPCENTER_OWNER_NAME"],
      app_name: "CloudNet-Store-Android",
      file: apkPath
    )
  end

  desc "Build app with Flutter tool and archive with Gym"
  lane :build do |options|
    flavor = options[:flavor]

    # build with flutter tool
    sh ("cd ../.. && flutter build apk --release --flavor #{flavor} -t lib/main_#{flavor}.dart --build-number=#{version_code}")
  end
end
